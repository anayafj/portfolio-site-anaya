{"version":3,"sources":["dc_core.js","dc_video.js","bltFramework.js","main.js"],"names":[],"mappingslkfile":"vendor/main.min.js","sourcesContent":["/** DOUBLECLICK CORE FUNCTIONS\n ********************************************************************************************/\n\nvar isExpanded = false;\n\n/** PRE INIT **********************************************/\nfunction initVendor () {\n    // init DoubleClick\n    if ( Enabler.isInitialized() ) vendorReady();\n    else Enabler.addEventListener ( studio.events.StudioEvent.INIT, vendorReady );\n}\n\n/** INIT *************************************************/\nfunction vendorReady () {\n    // console.info ('DOUBLECLICK API INITIALIZING');\n    addListeners ();\n\n    // polite load\n    if ( Enabler.isPageLoaded() ) pageLoadedHandler();\n    else Enabler.addEventListener (studio.events.StudioEvent.PAGE_LOADED, pageLoadedHandler);\n}\n\n/** PAGE LOADED *****************************************/\nfunction pageLoadedHandler () {\n    if ( Enabler.isVisible() ) adVisible();\n    else Enabler.addEventListener (studio.events.StudioEvent.VISIBLE, adVisible);\n}\n\n/** AD VISIBLE *****************************************/\nfunction adVisible () {\n    // ad visible ... dispatch READY event\n    dispatchEvent (BLT.Events.AD_READY);\n}\n\n/** LISTENERS *****************************************/\nfunction addListeners () {\n    // AD events\n    addEventListener ('expandAd', onExpandRequest);\n    addEventListener('expandAdDone', onExpandAdDone);\n    addEventListener ('collapseAd', onCollapseAd);\n    addEventListener ('collapseAdDone', onCollapseAdDone);\n\n    // DoubleClick events\n    Enabler.addEventListener (studio.events.StudioEvent.EXPAND_START, expandStartHandler);\n    Enabler.addEventListener (studio.events.StudioEvent.EXPAND_FINISH, expandFinishHandler);\n    Enabler.addEventListener (studio.events.StudioEvent.COLLAPSE_START, collapseStartHandler);\n    Enabler.addEventListener (studio.events.StudioEvent.COLLAPSE_FINISH, collapseFinishHandler);\n    Enabler.addEventListener (studio.events.StudioEvent.EXIT, onExitHandler);\n}\n\n\n/***********************************************************************************************\n * EXPAND METHODS\n **********************************************************************************************/\n\nfunction onExpandRequest (event) {\n    // console.info ('DC_CORE: onExpandAd');\n    Enabler.requestExpand ();\n    Enabler.startTimer ('Panel Expansion');\n}\n\nfunction onExpandAdDone (event){\n    // console.info ('DC_CORE: onExpandAdDone');\n    isExpanded = true;\n    Enabler.finishExpand();\n}\n\nfunction expandStartHandler (event) {\n    // console.info ('DC_CORE: expand start');\n    dispatchEvent (BLT.Events.EXPAND_READY);\n}\n\nfunction expandFinishHandler (event) {\n    // console.info ('DC_CORE: expand end');\n    dispatchEvent (BLT.Events.EXPAND_FINISHED);\n}\n\n\n/***********************************************************************************************\n * COLLAPSE METHODS\n **********************************************************************************************/\n\nfunction onCollapseAd (event) {\n    // console.info ('DC_CORE: onCollapseAd');\n\n    isExpanded = false;\n    Enabler.requestCollapse ();\n    Enabler.stopTimer ('Panel Expansion');\n\n}\n\nfunction onCollapseAdDone (event) {\n    // console.info('DC_CORE: onCollapseAdDone');\n    Enabler.finishCollapse ();\n}\n\nfunction collapseStartHandler (event) {\n    // console.info ('DC_CORE: collapse start');\n    dispatchEvent (BLT.Events.COLLAPSE_READY);\n}\n\nfunction collapseFinishHandler (event) {\n    // console.info ('DC_CORE: collapse end');\n    dispatchEvent (BLT.Events.COLLAPSE_FINISHED);\n}\n\n\n/***********************************************************************************************\n * CLOSE METHOD\n **********************************************************************************************/\n// function onCloseAd (event) {\n//     // console.info ('DC_CORE: onCloseAd');\n//\n//     isExpanded = false;\n//     Enabler.close();\n//     Enabler.reportManualClose ();\n// }\n\n\n/***********************************************************************************************\n * EXIT CLEANUP\n **********************************************************************************************/\nfunction onExitHandler (event) {\n    console.info(\"ON EXIT HANDLER - DC Core\");\n\n    dispatchEvent(BLT.Events.AD_EXIT);\n\n    // dispatchEvent (BLT.Events.KILL_VIDEO);\n    // if (isExpanded) dispatchEvent (BLT.Events.COLLAPSE_AD);\n}\n","/** DC VIDEO PLAYER\n ********************************************************************************************/\n\nvar BLT = BLT || {};\nBLT.Video = BLT.Video || {};\n\nvar $videoArray = [],\n    $videoGroups = {},\n    $vidPlayer = undefined,\n    $currID = undefined,\n    $currTuneIn = undefined,\n    $currReportingID,\n    $isPlaying = false,\n    $autoPlay = false\n    ;\n\n\n/** INIT\n ********************************************************************************************/\nBLT.Video.init = function (vidElement) {\n    $vidPlayer = vidElement;\n    BLT.Video.checkInit(); // error check\n\n    BLT.Video.addListeners();\n\n    // determine current group ID based on TuneIn\n    var tuneinID = BLT.Tunein.currentID;\n    tuneinID === undefined ? $currTuneIn = 'default' : $currTuneIn = tuneinID;\n};\n\n\n/** ADD LISTENERS\n ********************************************************************************************/\nBLT.Video.addListeners = function () {\n    // ad events\n    addEventListener ('collapseAd', BLT.Video.handleEvents);\n    addEventListener ('parseDates', BLT.Video.handleEvents);\n    addEventListener ('pauseVideo', BLT.Video.handleEvents);\n    addEventListener ('playVideo', BLT.Video.handleEvents);\n    addEventListener ('replayVideo', BLT.Video.handleEvents);\n    addEventListener ('videoPlaying', BLT.Video.handleEvents);\n    addEventListener ('killVideo', BLT.Video.handleEvents);\n    addEventListener ('muteVideo', BLT.Video.handleEvents);\n    addEventListener ('unmuteVideo', BLT.Video.handleEvents);\n\n    // video events\n    $vidPlayer.addEventListener ('timeupdate', BLT.Video.handleProgress);\n    $vidPlayer.addEventListener ('canplay', BLT.Video.handleEvents);\n    $vidPlayer.addEventListener ('ended', BLT.Video.handleEvents);\n    $vidPlayer.addEventListener ('loadedmetadata', BLT.Video.handleEvents);\n\n    // FULL SCREEN METHODS\n    addEventListener ('showFullscreen', BLT.Video.handleEvents);\n    addEventListener ('exitFullscreen', BLT.Video.handleEvents);\n\n    // FULL SCREEN EXIT DETECTION\n    addEventListener ('webkitfullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('mozfullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('fullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('MSFullscreenChange', BLT.Video.onExitFSHandler, false);\n};\n\n\n/** HANDLE EVENTS\n ********************************************************************************************/\nBLT.Video.handleEvents = function (event) {\n    switch (event.type) {\n        case 'collapseAd':\n            dispatchEvent (BLT.Events.KILL_VIDEO);\n            break;\n        case 'parseDates':\n            BLT.Video.sortGroups();\n            break;\n        case 'pauseVideo':\n            BLT.Video.pauseVideo();\n            break;\n        case 'playVideo':\n            BLT.Video.playVideo();\n            break;\n        case 'replayVideo':\n            BLT.Video.replayVideo();\n            break;\n        case 'muteVideo':\n            BLT.Video.toggleMute(true);\n            break;\n        case 'unmuteVideo':\n            BLT.Video.toggleMute(false);\n            break;\n        case 'killVideo':\n            BLT.Video.killVideo();\n            break;\n        case 'showFullscreen':\n            BLT.Video.showFullScreen();\n            break;\n        case 'hideFullscreen':\n            BLT.Video.exitFullScreen();\n            break;\n        case 'canplay':\n            dispatchEvent (BLT.Events.VIDEO_READY);\n            break;\n        case 'ended':\n            $isPlaying = false;\n            dispatchEvent (BLT.Events.VIDEO_COMPLETE);\n            BLT.Video.exitFullScreen();\n            break;\n        case 'loadedmetadata':\n            BLT.Video.checkSize();\n            break;\n    }\n};\n\n/** HANDLE PROGRESS\n ********************************************************************************************/\nBLT.Video.handleProgress = function (event) {\n    var duration = $vidPlayer.duration;\n    var currTime = $vidPlayer.currentTime;\n    var perc = ((currTime/duration) *100).toFixed(2);\n\n    if (perc >= 75 && perc <= 76) {\n        console.log ('3RD QUARTILE');\n        dispatchEvent (BLT.Events.VIDEO_75_PERCENT);\n    }\n    else if (perc >= 50 && perc <= 51) {\n        console.log ('MIDPOINT');\n        dispatchEvent (BLT.Events.VIDEO_50_PERCENT);\n    }\n    else if (perc >= 25 && perc <= 26) {\n        console.log ('1ST QUARTILE');\n        dispatchEvent (BLT.Events.VIDEO_25_PERCENT);\n    }\n};\n\n\n/** ADD VIDEO\n ********************************************************************************************/\nBLT.Video.addVideo = function (sourcePath, groupID, reportingID) {\n    BLT.Video.checkInit(); // error check\n\n    // create video object\n    var videoObj = {};\n    videoObj.source = sourcePath;\n    videoObj.groupID = groupID;\n    videoObj.reportingID = reportingID;\n\n    // add to $videoArray\n    $videoArray.push (videoObj);\n\n    // rebuild $videoGroups\n    BLT.Video.sortGroups();\n};\n\n\n/** SORT GROUPS\n ********************************************************************************************/\nBLT.Video.sortGroups = function () {\n    // rebuld $videoGroups from $videoArray\n    $videoGroups = {};\n\n    for (var i in $videoArray) {\n        var videoObj = ($videoArray[i]);\n\n        // check if tuneIn is used, if not, add to a 'default' group\n        var groupID = videoObj.groupID;\n        $currTuneIn = BLT.Tunein.currentID;\n\n        if ($currTuneIn === undefined) {\n            $currTuneIn = 'default';\n            groupID = 'default';\n        }\n\n        // check if group exists in $videoGroups; if not create the group object\n        if ($videoGroups.hasOwnProperty(groupID) === false) {\n            $videoGroups[groupID] = [];\n        }\n\n        $videoGroups[groupID].push (videoObj);\n    }\n};\n\n\n/** LOAD VIDEO\n ********************************************************************************************/\nBLT.Video.loadVideo = function (videoID, controlType, isMuted) {\n    BLT.Video.checkInit(); // error check\n\n    // dispose any previous video instances\n    BLT.Video.killVideo();\n\n    var sourceVideo = $videoGroups[$currTuneIn][videoID].source;\n    $currID = videoID;\n    $currReportingID = $videoGroups[$currTuneIn][videoID].reportingID;\n\n    // mp4 video\n    srcNode = document.createElement ('source');\n    srcNode.setAttribute ('type', 'video/mp4');\n    srcNode.setAttribute ('src', Enabler.getUrl (sourceVideo + '.mp4'));\n    $vidPlayer.appendChild (srcNode);\n\n    // webm video\n    var srcNode = document.createElement ('source');\n    srcNode.setAttribute ('type', 'video/webm');\n    srcNode.setAttribute ('src', Enabler.getUrl (sourceVideo + '.webm'));\n    $vidPlayer.appendChild (srcNode);\n\n    // initially remove controls\n    $vidPlayer.removeAttribute (\"controls\");\n    dispatchEvent (BLT.Events.HIDE_CONTROLS);\n\n    // if adding controls, determine what type\n    if (controlType === 'default') $vidPlayer.setAttribute (\"controls\", \"controls\");\n    else if (controlType === 'custom') BLT.VideoControls.initControls ($vidPlayer);\n\n    // set autoplay\n    if ($autoPlay === true) $vidPlayer.setAttribute (\"autoplay\", $autoPlay);\n    else $vidPlayer.removeAttribute (\"autoplay\");\n\n    // handle muting\n    if (isMuted === undefined) isMuted = false;\n    BLT.Video.toggleMute (isMuted);\n\n    // DC TRACKING\n    Enabler.loadModule(studio.module.ModuleId.VIDEO, function() {\n        studio.video.Reporter.attach ($currReportingID, $vidPlayer);\n    });\n\n    $vidPlayer.load();\n\n    if ($autoPlay === true) {\n        $autoPlay = false;\n        $isPlaying = true;\n        console.info(\"LOAD AND PLAY -----  END \");\n        dispatchEvent (BLT.Events.VIDEO_PLAYING);\n    }\n};\n\n\n/** LOAD & PLAY VIDEO\n ********************************************************************************************/\nBLT.Video.loadPlayVideo = function (videoID, controlType, isMuted) {\n    $autoPlay = true;\n    BLT.Video.loadVideo (videoID, controlType, isMuted);\n};\n\n\n/** PLAY VIDEO\n ********************************************************************************************/\nBLT.Video.playVideo = function () {\n    $vidPlayer.play ();\n    $isPlaying = true;\n    dispatchEvent (BLT.Events.VIDEO_PLAYING);\n};\n\n\n/** PAUSE VIDEO\n ********************************************************************************************/\nBLT.Video.pauseVideo = function () {\n    $vidPlayer.pause ();\n    $isPlaying = false;\n    dispatchEvent (BLT.Events.VIDEO_PAUSED);\n};\n\n/** REPLAY VIDEO\n ********************************************************************************************/\nBLT.Video.replayVideo = function () {\n    $vidPlayer.pause ();\n    $vidPlayer.currentTime = 0;\n    $vidPlayer.play ();\n    $isPlaying = true;\n    dispatchEvent (BLT.Events.VIDEO_PLAYING);\n};\n\n\n/** KILL VIDEO\n ********************************************************************************************/\nBLT.Video.killVideo = function () {\n    console.log ('KILL VIDEO');\n    if ($isPlaying == true) $vidPlayer.pause();\n    $isPlaying = false;\n    while ($vidPlayer.firstChild) {\n        $vidPlayer.removeChild ($vidPlayer.firstChild);\n    }\n};\n\n\n/** TOGGLE MUTE\n ********************************************************************************************/\nBLT.Video.toggleMute = function (muteState) {\n    $vidPlayer.muted = muteState;\n\n    if (muteState === true) dispatchEvent (BLT.Events.VIDEO_MUTED);\n    else dispatchEvent (BLT.Events.VIDEO_UNMUTED);\n};\n\n\n/** CHECK VIDEO SIZE\n ********************************************************************************************/\nBLT.Video.checkSize = function() {\n    // check if video can play in IE\n    if ($vidPlayer.videoWidth > 1920 || $vidPlayer.videoHeight > 1080) {\n        console.error(\"<<< VIDEO EXCEEDS MAXIMUM SIZE FOR IE (1920x1088) >>>\");\n        console.error(\" <<< RESIZE THE VIDEO WITHIN SPEC FOR IE SUPPORT >>>\");\n    }\n};\n\n\n\n/** SHOW FULLSCREEN METHOD\n ********************************************************************************************/\nBLT.Video.showFullScreen = function() {\n    if (document.requestFullscreen)             document.requestFullscreen();\n    else if (document.mozRequestFullScreen)     document.mozRequestFullScreen();\n    else if (document.webkitRequestFullscreen)  document.webkitRequestFullscreen();\n    else if (document.msRequestFullscreen)      document.msRequestFullscreen();\n\n    dispatchEvent (BLT.Events.VIDEO_FULLSCREEN_OPENED);\n};\n\n\n/** EXIT FULLSCREEN METHOD\n ********************************************************************************************/\nBLT.Video.exitFullScreen = function() {\n    // cross browser exit fullscreen helper\n    if (document.exitFullscreen)                document.exitFullscreen();\n    else if (document.mozCancelFullScreen)      document.mozCancelFullScreen();\n    else if (document.webkitCancelFullScreen)   document.webkitCancelFullScreen();\n    else if (document.msExitFullscreen)         document.msExitFullscreen();\n};\n\n\n/** EXIT FULLSCREEN CALLBACK\n ********************************************************************************************/\nBLT.Video.onExitFSHandler = function(e)\n{\n    // run when fullscreen is exited\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement === false)\n    {\n        dispatchEvent (BLT.Events.VIDEO_FULLSCREEN_CLOSED);\n    }\n};\n\n\n/** ERROR CHECKING\n ********************************************************************************************/\nBLT.Video.checkInit = function () {\n    if ($vidPlayer === undefined) {\n        throw \"Video Element not defined. Please use BLT.Video.init () to pass the video element prior to using the video player.\"\n    }\n};","var BLT = BLT || {};\n\nBLT.initFramework = function () {\n    console.info ('BLT AD FRAMEWORK : version 1.4');\n};\n\n// startup\nwindow.onload = BLT.initFramework();\n\n\n/** FRAMEWORK DEPENDENCIES\n **********************************************************/\n\n/** BLT EVENTS\n **********************************************************/\n\n// polyfill fix for IE (adds custom events to IE)\n(function () {\n    function CustomEvent ( event, params ) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent ( 'CustomEvent' );\n        evt.initCustomEvent ( event, params.bubbles, params.cancelable, params.detail );\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n})();\n\n\nBLT.Events = {\n\n    /** AD EVENTS\n     *************************************************************/\n    AD_READY:                   new CustomEvent ('adReady'),\n\n    CLOSE_AD:                   new CustomEvent ('closeAd'),\n\n    EXPAND_AD:                  new CustomEvent ('expandAd'),\n    EXPAND_READY:               new CustomEvent ('expandReady'),\n    EXPAND_AD_DONE:             new CustomEvent ('expandAdDone'), //// FJA\n    EXPAND_FINISHED:            new CustomEvent ('expandFinished'), //// FJA\n\n    COLLAPSE_AD:                new CustomEvent ('collapseAd'),\n    COLLAPSE_READY:             new CustomEvent ('collapseReady'),\n    COLLAPSE_AD_DONE:           new CustomEvent ('collapseAdDone'),  //// FJA\n    COLLAPSE_FINISHED:          new CustomEvent ('collapseFinished'),  //// FJA\n\n    REPLAY_AD:                  new CustomEvent ('replayAd'),\n    PARSE_DATES:                new CustomEvent ('parseDates'),\n\n    AD_EXIT:                       new CustomEvent ('exitTriggered'), // FJA\n\n\n    /** VIDEO EVENTS\n     *************************************************************/\n    // status events\n    VIDEO_LOADED:               new CustomEvent ('videoLoaded'),\n    VIDEO_LOAD_PROGRESS:        new CustomEvent ('videoLoadProgress'),\n    VIDEO_READY:                new CustomEvent ('videoReady'),\n    VIDEO_COMPLETE:             new CustomEvent ('videoComplete'),\n    VIDEO_STARTED:              new CustomEvent ('videoStarted'),\n    VIDEO_PLAYING:              new CustomEvent ('videoPlaying'),\n    VIDEO_PAUSED:               new CustomEvent ('videoPaused'),\n    VIDEO_RESUMED:              new CustomEvent ('videoResumed'),\n    VIDEO_REPLAYING:            new CustomEvent ('videoReplaying'),\n    VIDEO_MUTED:                new CustomEvent ('videoMuted'),\n    VIDEO_UNMUTED:              new CustomEvent ('videoUnmuted'),\n    VIDEO_ERROR:                new CustomEvent ('videoError'),\n    VIDEO_ON_CUEPOINT:          new CustomEvent ('videoCuepoint'),\n\n    // buffer events\n    VIDEO_BUFFER_EMPTY:         new CustomEvent ('videoBufferEmpty'),\n    VIDEO_BUFFER_FULL:          new CustomEvent ('videoBufferFull'),\n    VIDEO_SHOW_BUFFER:          new CustomEvent ('videoShowBuffer'),\n    VIDEO_HIDE_BUFFER:          new CustomEvent ('videoHideBuffer'),\n\n    // progress events\n    VIDEO_PROGRESS:             new CustomEvent ('videoProgress'),\n    VIDEO_0_PERCENT:            new CustomEvent ('video 0% complete'),\n    VIDEO_25_PERCENT:           new CustomEvent ('video 25% complete'),\n    VIDEO_50_PERCENT:           new CustomEvent ('video 50% complete'),\n    VIDEO_75_PERCENT:           new CustomEvent ('video 75% complete'),\n    VIDEO_100_PERCENT:          new CustomEvent ('video 100% complete'),\n\n    // controls\n    MUTE_VIDEO:                 new CustomEvent ('muteVideo'),\n    UNMUTE_VIDEO:               new CustomEvent ('unmuteVideo'),\n    PLAY_VIDEO:                 new CustomEvent ('playVideo'),\n    PAUSE_VIDEO:                new CustomEvent ('pauseVideo'),\n    REPLAY_VIDEO:               new CustomEvent ('replayVideo'),\n    SEEK_VIDEO:                 new CustomEvent ('seekVideo'),\n    KILL_VIDEO:                 new CustomEvent ('killVideo'),\n    HIDE_CONTROLS:              new CustomEvent ('hideControls'),\n    SHOW_CONTROLS:              new CustomEvent ('showControls'),\n\n    // fullscreen events\n    VIDEO_FULLSCREEN_OPENED:    new CustomEvent ('fullScreenOpened'),\n    VIDEO_FULLSCREEN_CLOSED:    new CustomEvent ('fullScreenClosed'),\n    SHOW_FULLSCREEN:            new CustomEvent ('showFullscreen'),\n    EXIT_FULLSCREEN:            new CustomEvent ('exitFullscreen')\n};\n\n\n/** BLT TUNEIN CLASS\n **********************************************************/\n\nBLT.Tunein = BLT.Tunein || {};\n\nBLT.Tunein.dates = [];\nBLT.Tunein.today = new Date();\nBLT.Tunein.currentTunein = new Date();\nBLT.Tunein.currentID = undefined;\nBLT.Tunein.isProxy = false;\n\n\nBLT.Tunein.addDate = function (year, month, day, id ) {\n    if (!BLT.Tunein.dates) BLT.Tunein.dates = [];\n    var date = new Date (year, month -1, day);\n    date.id = id;\n    BLT.Tunein.dates.push (date);\n};\n\n\nBLT.Tunein.parseDates = function (year, month, day ) {\n    if (BLT.Tunein.errorCheck()) return;\n\n    BLT.Tunein.isProxy = false;\n\n    // if date value for comparison if passed (for testing)\n    if (year && month && day) {\n        // will use proxy date for testing\n        BLT.Tunein.today = new Date (year, month -1, day);\n        BLT.Tunein.isProxy = true;\n    }\n\n    BLT.Tunein.sortDec (BLT.Tunein.dates);\n    BLT.Tunein.currentTunein = BLT.Tunein.today;\n    BLT.Tunein.currentID = 'default';\n\n    // determine correct Tunein\n    for (var i in BLT.Tunein.dates) {\n        if (BLT.Tunein.today >= BLT.Tunein.dates[i]) {\n            BLT.Tunein.currentID = BLT.Tunein.dates[i].id;\n            BLT.Tunein.currentTunein = BLT.Tunein.dates[i];\n            break;\n        }\n    }\n\n    dispatchEvent (BLT.Events.PARSE_DATES);\n\n    // display the results\n    BLT.Tunein.displayCurrentDate();\n};\n\n\n// sort date array ascending\nBLT.Tunein.sortAsc = function (dateArray) {\n    dateArray.sort (function (a, b) {\n        a = new Date ( a.getTime() );\n        b = new Date ( b.getTime() );\n        return a < b ? -1 : a > b ? 1 : 0;\n    });\n};\n\n\n// sort date array descending\nBLT.Tunein.sortDec = function (dateArray) {\n    dateArray.sort (function (a, b) {\n        a = new Date ( a.getTime() );\n        b = new Date ( b.getTime() );\n        return a > b ? -1 : a < b ? 1 : 0;\n    });\n};\n\n\n/** CONSOLE LOG FOR TESTING **/\n// displays all dates in the console window (for testing)\nBLT.Tunein.displayDates = function () {\n    if (BLT.Tunein.errorCheck()) return;\n\n    var revDates = BLT.Tunein.dates.slice(0); // clone\n    BLT.Tunein.sortAsc (revDates);\n\n    for (var x in revDates) {\n        console.info ( revDates[x].id, '--> ', revDates[x].toLocaleDateString() );\n    }\n\n    // display the results\n    BLT.Tunein.displayCurrentDate();\n};\n\n\n// displays current dates in console window (for testing)\nBLT.Tunein.displayCurrentDate = function () {\n    var outputString;\n    BLT.Tunein.isProxy ? outputString = 'CURRENT TUNEIN (USING PROXY):' : outputString = 'CURRENT TUNEIN:';\n\n    console.info (outputString, BLT.Tunein.currentID, '-->', BLT.Tunein.currentTunein.toLocaleDateString() );\n};\n\n\n// ERROR CHECKING\nBLT.Tunein.errorCheck = function () {\n    if (BLT.Tunein.dates.length === 0) {\n        console.info ('<<< Tunein cannot be parsed. Use BLT.Tunein.addDate to add date values');\n        return 1;\n    }\n    else return 0; // no error\n};\n\n\n\n/** BLT HELPER METHODS\n **********************************************************/\n\n/** LOAD EXTERNAL JAVASCRIPT **/\nvar loadScript = function (scriptURL, callback)  {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n\n    if (script.readyState){  // IE, incl. IE9\n        script.onreadystatechange = function(){\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\"){\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {  // others\n        script.onload = callback;\n    }\n\n    script.src = scriptURL;\n    document.body.appendChild (script);\n};\n\n\n/** ADD CLASS **/\nvar addClass = function ($el, className) {\n    var attr = $el.getAttribute ('class') || '';  // default to empty string\n    var classList = attr.split (' ');\n\n    for (var i = 0; i < classList.length; i++) {\n        if (classList[i] === className) return;\n    }\n\n    classList.push (className);\n    $el.setAttribute ('class', classList.join(' '));\n};\n\n/** REMOVE CLASS **/\nvar removeClass = function (element, className) {\n    var Element = (typeof element === 'string') ? _getElement(element) : element;\n    var classNames = Element.className;\n\n    // Clean up Class Names\n    classNames = classNames.replace(className, '');\n    classNames = classNames.replace(/\\s{2,}/g, ' ').replace(/^ +/gm, '').replace(/\\s+$/, '');\n\n    // Update Class Names\n    Element.className = classNames;\n};\n\n/** GET ELEMENT **/\nvar getEl = function ($id) {\n    return document.getElementById ($id);\n};\n\n// Get Element by class\nvar getElClass = function ($id) {\n    return document.getElementsByClassName($id);\n};\n\n/** SHOW ELEMENT **/\nvar show = function ($element) {\n    $element.style.display = 'block';\n};\n\n/** HIDE ELEMENT **/\nvar hide = function ($element) {\n    $element.style.display = 'none';\n};\n\n/** DEVICE DETECTION **/\nvar getDevice = (function () {\n    var ua     = navigator.userAgent.toLowerCase();\n    var detect = (function (s) {\n        if (typeof (s) === 'undefined') {\n            s = ua;\n        } else {\n            ua = s.toLowerCase();\n        }\n        if (/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(ua)) {\n            return 'tablet';\n        } else if (/(mobi|ipod|phone|blackberry|opera mini|fennec|minimo|symbian|psp|nintendo ds|archos|skyfire|puffin|blazer|bolt|gobrowser|iris|maemo|semc|teashark|uzard)/.test(ua)) {\n            return 'phone';\n        } else {\n            return 'desktop';\n        }\n    });\n    var device = detect();\n    return {\n        detect     : detect,\n        device     : device,\n        isMobile   : (device !== 'desktop'),\n        isTablet   : (device === 'tablet'),\n        isDestktop : (device === 'desktop'),\n        userAgent  : ua\n    };\n}());\n\n\n/** BLT VIDEO CONTROLS CLASS\n **********************************************************/\n\nvar BLT = BLT || {};\nBLT.VideoControls = {};\n\nvar videoPlayer,\n    videoControls,\n    playButton,\n    pauseButton,\n    soundOffButton,\n    soundOnButton,\n    videoScrubber,\n    scrubHandle,\n    videoTrack,\n    videoProgress,\n    trackRect,\n    trackLeft,\n    trackRight,\n    trackWidth,\n    trackOffsetLeft,\n    scrubberLeft,\n    videoDuration,\n    inProgress = false;\n\n\nBLT.VideoControls.initControls = function (player) {\n    videoPlayer = player;\n    BLT.VideoControls.initVars();\n    BLT.VideoControls.addListeners();\n};\n\n\nBLT.VideoControls.initVars = function () {\n    // elements\n    videoControls = document.getElementById     ('vidControls');\n    playButton = document.getElementById        ('playButton');\n    pauseButton = document.getElementById       ('pauseButton');\n    soundOffButton = document.getElementById    ('soundOffButton');\n    soundOnButton = document.getElementById     ('soundOnButton');\n    videoScrubber = document.getElementById     ('videoScrubber');\n    scrubHandle = document.getElementById       ('scrubHandle');\n    videoTrack = document.getElementById        ('scrubTrack');\n    videoProgress = document.getElementById     ('scrubProgress');\n};\n\n\nBLT.VideoControls.addListeners = function () {\n    playButton.addEventListener ('click', BLT.VideoControls.handleControls);\n    pauseButton.addEventListener ('click', BLT.VideoControls.handleControls);\n    soundOffButton.addEventListener ('click', BLT.VideoControls.handleControls);\n    soundOnButton.addEventListener ('click', BLT.VideoControls.handleControls);\n\n    addEventListener ('hideControls', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('showControls', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('videoPlaying', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('videoPaused', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('videoMuted', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('videoUnmuted', BLT.VideoControls.handleVideoEvents);\n    addEventListener ('killVideo', BLT.VideoControls.killControls);\n\n    addEventListener ('videoComplete', BLT.VideoControls.handleVideoComplete);\n    videoPlayer.addEventListener ('canplay', BLT.VideoControls.videoReady);\n\n    if (videoScrubber != null) {\n        videoTrack.addEventListener ('click', BLT.VideoControls.handleControls);\n        videoPlayer.addEventListener ('timeupdate', BLT.VideoControls.handleProgressEvent);\n\n        // scrubber\n        scrubHandle.onmousedown = function(e) {\n            videoDuration = videoPlayer.duration;\n            videoPlayer.removeEventListener ('timeupdate', BLT.VideoControls.handleProgressEvent);\n\n            document.onmousemove = function(e) {\n                if (e.clientX >= (trackLeft + scrubHandle.offsetWidth /2) && e.clientX <= trackRight) {\n                    BLT.VideoControls.setScrubberPosition (e);\n                }\n            };\n\n            document.onmouseup = function() {\n                document.onmousemove = document.onmouseup = null;\n                videoPlayer.addEventListener ('timeupdate', BLT.VideoControls.handleProgressEvent);\n            };\n        }\n    }\n};\n\nBLT.VideoControls.removeListeners = function () {\n    console.log ('REMOVE CONTROL LISTENERS');\n\n    playButton.removeEventListener ('click', BLT.VideoControls.handleControls);\n    pauseButton.removeEventListener ('click', BLT.VideoControls.handleControls);\n    soundOffButton.removeEventListener ('click', BLT.VideoControls.handleControls);\n    soundOnButton.removeEventListener ('click', BLT.VideoControls.handleControls);\n\n    removeEventListener ('hideControls', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('showControls', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('videoPlaying', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('videoPaused', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('videoMuted', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('videoUnmuted', BLT.VideoControls.handleVideoEvents);\n    removeEventListener ('killVideo', BLT.VideoControls.killControls);\n\n    removeEventListener ('videoComplete', BLT.VideoControls.handleVideoComplete);\n\n    videoTrack.removeEventListener ('click', BLT.VideoControls.handleControls);\n    videoPlayer.removeEventListener ('timeupdate', BLT.VideoControls.handleProgressEvent);\n    videoPlayer.removeEventListener ('canplay', BLT.VideoControls.videoReady);\n};\n\n\nBLT.VideoControls.videoReady = function (event) {\n    // display controls\n    show (videoControls);\n\n    videoPlayer.removeEventListener ('canplay', BLT.VideoControls.videoReady);\n\n    // store video's duration\n    videoDuration = videoPlayer.duration;\n\n    // if scrubber exists, set properties\n    if (videoScrubber != null) {\n        trackRect = videoTrack.getBoundingClientRect();\n        trackWidth = trackRect.width;\n        trackLeft = trackRect.left;\n        trackRight = trackRect.right;\n        trackOffsetLeft = videoTrack.offsetLeft;\n\n        if (typeof scrubberLeft === 'undefined') scrubberLeft = scrubHandle.offsetLeft;\n    }\n};\n\nBLT.VideoControls.handleControls = function (event) {\n    var obj = event.currentTarget.id;\n\n    switch (obj) {\n        case 'playButton':\n            dispatchEvent (BLT.Events.PLAY_VIDEO);\n            if (videoScrubber != null && videoPlayer.currentTime == 0) videoProgress.style.width = 0;\n            BLT.VideoControls.togglePlayButton (false);\n            break;\n\n        case 'pauseButton':\n            dispatchEvent (BLT.Events.PAUSE_VIDEO);\n            BLT.VideoControls.togglePlayButton (true);\n            break;\n\n        case 'soundOffButton':\n            dispatchEvent (BLT.Events.UNMUTE_VIDEO);\n            BLT.VideoControls.toggleMuteButton (false);\n            break;\n\n        case 'soundOnButton':\n            dispatchEvent (BLT.Events.MUTE_VIDEO);\n            BLT.VideoControls.toggleMuteButton (true);\n            break;\n\n        case 'scrubTrack':\n            BLT.VideoControls.setScrubberPosition (event);\n            break;\n    }\n};\n\nBLT.VideoControls.handleVideoEvents = function (event) {\n    switch (event.type) {\n        case 'videoPlaying':\n            // console.info(\"video playing -- controls\");\n            BLT.VideoControls.showHideControls ('visible');\n            BLT.VideoControls.togglePlayButton (false);\n            break;\n\n        case 'videoPaused':\n            BLT.VideoControls.togglePlayButton (true);\n            break;\n\n        case 'hideControls':\n            // console.info(\"hideControls - EVENT\");\n            BLT.VideoControls.showHideControls ('hidden');\n            break;\n\n        case 'showControls':\n            BLT.VideoControls.showHideControls ('visible');\n            break;\n\n        case 'videoMuted':\n            BLT.VideoControls.toggleMuteButton (true);\n            break;\n\n        case 'videoUnmuted':\n            BLT.VideoControls.toggleMuteButton (false);\n            break;\n    }\n};\n\nBLT.VideoControls.showHideControls = function (state) {\n    console.info(\" HIDE VIDEO CONTROLS NOW !!!!!!\");\n    videoControls.style.visibility = state;\n};\n\n\nBLT.VideoControls.setScrubberPosition = function (event) {\n    if (!videoDuration) videoDuration = videoPlayer.duration;\n\n    var currPos = event.clientX;\n    var newPos = currPos - trackLeft;\n    var posRatio = newPos / trackWidth;\n    var newTime = videoDuration * posRatio;\n\n    videoPlayer.currentTime = newTime;\n    scrubHandle.style.left = (newPos - (scrubHandle.offsetWidth /2)) + \"px\";\n    videoProgress.style.width = (currPos - trackLeft) + \"px\";\n};\n\n\nBLT.VideoControls.handleProgressEvent = function () {\n    if (!videoDuration) videoDuration = videoPlayer.duration;\n\n    inProgress = true;\n\n    // BLT.VideoControls.togglePlayButton (false); // Band-aid\n\n    // moves scrubber in relation to currentTime\n    var currTime = videoPlayer.currentTime;\n    var posRatio = currTime/videoDuration;\n    var posOffset = trackWidth * posRatio;\n    var scrubberPos = scrubberLeft + posOffset;\n\n    var newPos = scrubberPos - (scrubHandle.offsetWidth /2);\n    if (newPos < 0) newPos = scrubberPos;\n\n    scrubHandle.style.left = newPos + \"px\";\n    videoProgress.style.width = (scrubberPos - trackOffsetLeft) + \"px\";\n};\n\n\nBLT.VideoControls.togglePlayButton = function (playState) {\n    // console.info(\" Play pause toggle ---- playState = \"+playState);\n;    if (playState === true) {\n        show (playButton);\n        hide (pauseButton);\n    }\n    else {\n        hide (playButton);\n        show (pauseButton);\n    }\n};\n\n\nBLT.VideoControls.toggleMuteButton = function (muteState) {\n    if (muteState === true) {\n        show (soundOffButton);\n        hide (soundOnButton);\n    }\n    else {\n        hide (soundOffButton);\n        show (soundOnButton);\n    }\n};\n\n\nBLT.VideoControls.handleVideoComplete = function (event) {\n    // console.info(\"video complete -- controls\");\n   if(!inProgress){\n       BLT.VideoControls.togglePlayButton (true);\n   } else {\n       inProgress = false;\n   }\n};\n\n\nBLT.VideoControls.killControls = function () {\n    BLT.VideoControls.removeListeners();\n    hide (videoControls);\n};\n","var AD = AD || {};\n\nvar $ad, $bgExits, $videoContainer, $mainVideo, $videoExit,$cfs, $vidControls,\n    $collapse, $expanded, $expandBtn, $vidBorder,\n    $colBg, $colLogo, $colLockup, $colHeader, $cta,\n    $closeBtn, $videoThumbnails, $vidThumb1, $vidThumb2, $vidThumb3, $vidThumb4,\n    $thTxt1, $thTxt2,$thTxt3,$thTxt4, $videoCap,\n    $expBackground, $expLogo, $expPedigree, $expDate, $expHeader, $expCta, $bgCouch;\n\nvar $isExpanding = false,\n    $isVideoComplete = false,\n    $expMax = 988,\n    $expMin = 300;\n\n/** INITIALIZE AD\n *******************************************************************/\nAD.initAd = function () {\n    AD.setVars();\n    AD.checkDate();\n    AD.addListeners();\n    AD.addVideos();\n    AD.collapseEndframeAnimation();\n    AD.expandAnimation();\n\n    addClass($videoCap, 'hidden');\n    addClass($vidBorder, 'hidden');\n    addClass($videoThumbnails, 'hidden');\n    hide($expanded);\n\n    // INITIALIZE THE AD VENDOR API\n    initVendor();\n};\n\n/** AD READY -- CALLED ONCE VENDOR API IS READY (EVENT DISPATCHED)\n *******************************************************************/\nAD.adReady = function() {\n    // console.info ('AD READY ----- $isExpanding = '+$isExpanding);\n    addClass($ad,'ready');\n    BLT.Video.loadPlayVideo (0, \"none\", true);\n};\n\n// Set DOM element variables ----------------------------\nAD.setVars = function () {\n    $ad                 = getEl ('adContainer');\n    $bgExits            = getElClass('bg-exit');\n    $videoContainer     = getEl ('videoContainer');\n    $mainVideo          = getEl ('videoPlayer');\n    $vidControls        = getEl ('vidControls');\n    $videoExit          = getEl ('videoClick');\n    $cfs                = getEl ('snd-icon');\n    $collapse           = getEl ('collapse');\n    $expanded           = getEl ('expand');\n    $vidBorder          = getEl ('videoBorder');\n\n    // Collapse panel\n    $expandBtn          = getEl ('expandBtn');\n    $colBg              = getEl ('colBackground');\n    $colLogo            = getEl ('colLogo');\n    $colLockup          = getEl ('colDate');\n    $colHeader          = getEl ('colHeader');\n    $cta                = getEl ('cta');\n\n    // Expand panel\n    $closeBtn           = getEl ('closeBtn');\n    $videoThumbnails    = getEl ('videoThumbnails');\n    $vidThumb1          = getEl ('vidThumb1');\n    $vidThumb2          = getEl ('vidThumb2');\n    $vidThumb3          = getEl ('vidThumb3');\n    $vidThumb4          = getEl ('vidThumb4');\n    $thTxt1             = getEl ('thTxt1');\n    $thTxt2             = getEl ('thTxt2');\n    $thTxt3             = getEl ('thTxt3');\n    $thTxt4             = getEl ('thTxt4');\n    $videoCap           = getEl ('videoCapContainer');\n    $expBackground      = getEl ('expBackground');\n    $expLogo            = getEl ('expLogo');\n    $expPedigree        = getEl ('expPedigree');\n    $expDate            = getEl ('expDate');\n    $expHeader          = getEl ('expHeader');\n    $bgCouch            = getEl ('bgCouch');\n    $expCta             = getEl ('expCta');\n};\n\n/** SETUP LISTENERS\n *******************************************************************/\nAD.addListeners = function () {\n    // ad events\n    addEventListener ('adReady', AD.adReady);\n    addEventListener ('exitTriggered', AD.exitTriggered);\n\n    // Expand/collapse listeners ---------------------------\n    addEventListener ('expandReady', AD.expandPanel);\n    addEventListener ('expandFinished', AD.expandPanelFinished);\n    addEventListener ('collapseReady', AD.collapsePanel);\n    addEventListener ('collapseFinished', AD.collapsePanelFinished);\n\n    // Expand/collapse button listeners ---------------------------\n    $expandBtn.addEventListener(\"click\", AD.expandCollapseToggle);\n    $closeBtn.addEventListener(\"click\", AD.expandCollapseToggle);\n\n    // video events\n    addEventListener ('videoComplete', AD.videoComplete);\n\n    // video buttons\n    $videoExit.addEventListener('click', AD.exitHandler);\n    $videoContainer.addEventListener('mouseover', AD.handleControls);\n    $videoContainer.addEventListener('mouseout', AD.handleControls);\n    $vidThumb1.addEventListener('click', AD.videoThumbnailHandler);\n    $vidThumb2.addEventListener('click', AD.videoThumbnailHandler);\n    $vidThumb3.addEventListener('click', AD.videoThumbnailHandler);\n    $vidThumb4.addEventListener('click', AD.videoThumbnailHandler);\n\n    // Exit Events\n    for (var bgExitIndex = 0; bgExitIndex < $bgExits.length; bgExitIndex++) {\n        $bgExits[bgExitIndex].addEventListener('click', AD.exitHandler);\n    }\n};\n\n// Exit handler for DC exit\nAD.exitTriggered = function(event){\n    console.info ('DC exitTriggered | isExpanded : '+isExpanded);\n    if(isExpanded){\n        dispatchEvent (BLT.Events.COLLAPSE_AD);\n        addResizeListener($ad, AD.resizeCallback);\n    }\n};\n\n// Exit handler for all click-outs\nAD.exitHandler = function(event){\n    var target = (event.currentTarget) ? event.currentTarget : event.srcElement;\n    console.info ('AD.exitHandler | target : '+target);\n    switch(target){\n        case $videoExit:\n            if(isExpanded){ Enabler.exit(\"GENERAL\") } else {AD.videoExpand()};\n            break;\n        default:\n            Enabler.exit(\"GENERAL\");\n            break;\n    }\n};\n\n////////////////////////////////////////////////////////////////////////////\n// *** Expand *** ///////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////\n\n// Listens for AD unit to reach its desired Expand and collapse dimensions\nAD.resizeCallback = function() {\n    if($ad.offsetWidth === $expMax && $isExpanding){\n        console.info(\"reached expand\");\n        dispatchEvent (BLT.Events.EXPAND_AD_DONE);\n        removeResizeListener($ad, AD.resizeCallback);\n    }else if($ad.offsetWidth === $expMin && !$isExpanding){\n        console.info(\"reached collapsed\");\n        dispatchEvent (BLT.Events.COLLAPSE_AD_DONE);\n        removeResizeListener($ad, AD.resizeCallback);\n    }\n};\n\n// Expand and Collapse button toggle -----------------------------------\nAD.expandCollapseToggle = function (event) {\n    // console.info ('Expand | Collapse toggle function');\n    var target = (event.currentTarget) ? event.currentTarget : event.srcElement;\n    switch(target){\n        case $expandBtn:\n            // console.log(\"Expand button hit\");\n            $isExpanding = true;\n            dispatchEvent (BLT.Events.EXPAND_AD);\n            break;\n        case $closeBtn:\n            // console.log(\"Collapse button hit\");\n            Enabler.reportManualClose();\n            dispatchEvent (BLT.Events.COLLAPSE_AD);\n            break;\n    }\n    addResizeListener($ad, AD.resizeCallback);\n};\n\n/** EXPAND FUNCTIONS\n *******************************************************************/\n\n// EXPAND STARTED ----------------------\nAD.expandPanel = function(){\n    // console.info ('EXPAND START');\n    addClass($ad, \"expandAd\");\n    hide ($collapse);\n    show($expanded);\n    addClass($videoContainer, 'user-video');\n    addClass($mainVideo, \"hidden\");\n    removeClass($vidBorder, 'hidden');\n    removeClass($videoThumbnails, 'hidden');\n    removeClass($videoContainer, 'hidden');\n    $isVideoComplete = false;\n    videoNum = 1;\n    tlExpand.restart();\n};\n\n// EXPAND FINISHED ----------------------\nAD.expandPanelFinished = function (){\n    console.info ('EXPAND FINISH');\n    $isExpanding = false;\n    show ($closeBtn);\n    BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n    $videoContainer.addEventListener('mouseover', AD.handleControls);\n    $videoContainer.addEventListener('mouseout', AD.handleControls);\n};\n\n/** COLLAPSE FUNCTIONS\n *******************************************************************/\n\n// COLLAPSE STARTED ----------------------\nAD.collapsePanel = function () {\n    // console.info ('COLLAPSE START');\n    hide ($closeBtn);\n    tlExpand.kill();\n    removeClass($ad, \"expandAd\");\n    AD.resetVideoElements();\n    addClass($videoThumbnails, 'hidden');\n    addClass($videoContainer, 'hidden');\n    hide($expanded);\n};\n// COLLAPSE FINISHED ----------------------\nAD.collapsePanelFinished = function (){\n    console.info ('COLLAPSE FINISH');\n    show ($collapse);\n    tlCollapse.restart();\n};\n\n\nAD.videoExpand = function(){\n  // video expand\n    $isVideoComplete = true;\n    BLT.Video.killVideo();\n    addClass($videoContainer, 'hidden');\n    $isExpanding = true;\n    dispatchEvent (BLT.Events.EXPAND_AD);\n    addResizeListener($ad, AD.resizeCallback);\n};\n\n////////////////////////////////////////////////////////////////////////////\n// *** Video *** ///////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////\n\nvar pathAka = \"video/\"; //\"http://downloads.paramount.com/mp/advertising/fences/BLT/970x250/\";\nvar videoNum = 0;\n\n// Add videos to play --------------\nAD.addVideos = function() {\n    //  ADD VIDEOS -- (videoPath, videoID, trackingString)\n    BLT.Video.init ($mainVideo); // video container element\n    // Default\n    BLT.Video.addVideo (pathAka+'hbo_crashing_300x250_intro', 'default', 'intro');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_teaser1_sundays', 'default', 'teaser 1');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_teaser2_sundays', 'default', 'teaser 2');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_trailer_sundays', 'default', 'trailer');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_featurette_sundays', 'default', 'featurette');\n\n    // Post\n    BLT.Video.addVideo (pathAka+'hbo_crashing_300x250_intro', 'post', 'intro');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_teaser1_tonight', 'post', 'teaser 1');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_teaser2_tonight', 'post', 'teaser 2');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_trailer_tonight', 'post', 'trailer');\n    BLT.Video.addVideo (pathAka+'hbo_crashing_442x248_featurette_tonight', 'post', 'featurette');\n};\n\n// shows/hides video controls ----------------------\nAD.handleControls = function(event){\n    var eventType = event.type;\n    //console.log(\"eventType = \",eventType);\n\n    dispatchEvent (BLT.Events.SHOW_CONTROLS);\n    switch (eventType)\n    {\n        case \"mouseover\":\n            TweenLite.to($vidControls,.3, {opacity:1, ease: Expo.easeOut});\n            break;\n        case \"mouseout\":\n            TweenLite.to($vidControls,.3, {opacity:0, ease: Expo.easeInOut});\n            break;\n    }\n};\n\n// sets thumbnails ----\nAD.thumbnailInit = function(){\n    console.info(\"Thumbnails init\");\n    addClass($vidThumb1,'disableThumb');\n    addClass($thTxt1,'setThumbTxt');\n    addClass($bgCouch, \"bg_couch_1\");\n    $videoCap.addEventListener('click', AD.replayVideo)\n};\n\nAD.resetVideoElements = function(){\n    AD.enableThumb();\n    AD.removeCouch();\n    addClass($mainVideo, \"hidden\");\n    addClass($videoCap, 'hidden');\n    BLT.Video.killVideo();\n};\n\nAD.videoThumbnailHandler = function(event){\n    var target = (event.currentTarget) ? event.currentTarget : event.srcElement;\n\n    addClass(target,'disableThumb');\n    AD.enableThumb();\n    AD.removeCouch();\n\n    switch(target){\n        case $vidThumb1:\n            // console.log(\"video thumbnail 1 clicked\");\n            videoNum = 1;\n            addClass($bgCouch, \"bg_couch_1\");\n            addClass($thTxt1,'setThumbTxt');\n            break;\n        case $vidThumb2:\n            // console.log(\"video thumbnail 2 clicked\");\n            videoNum = 2;\n            addClass($bgCouch, \"bg_couch_2\");\n            addClass($thTxt2,'setThumbTxt');\n            break;\n        case $vidThumb3:\n            // console.log(\"video thumbnail 3 clicked\");\n            videoNum = 3;\n            addClass($bgCouch, \"bg_couch_3\");\n            addClass($thTxt3,'setThumbTxt');\n            break;\n        case $vidThumb4:\n            // console.log(\"video thumbnail 4 clicked\");\n            videoNum = 4;\n            addClass($bgCouch, \"bg_couch_4\");\n            addClass($thTxt4,'setThumbTxt');\n            break;\n    }\n\n    BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n    // dispatchEvent (BLT.Events.SHOW_CONTROLS);\n\n    if($isVideoComplete){ AD.resetVideo(); }\n};\n\nAD.enableThumb = function(){\n    switch(videoNum){\n\n        case 1:\n            // console.log(\"Enable thumb 1\");\n            removeClass($vidThumb1,'disableThumb');\n            removeClass($thTxt1,'setThumbTxt');\n            break;\n        case 2:\n            // console.log(\"Enable thumb 2\");\n            removeClass($vidThumb2,'disableThumb');\n            removeClass($thTxt2,'setThumbTxt');\n            break;\n        case 3:\n            // console.log(\"Enable thumb 3\");\n            removeClass($vidThumb3,'disableThumb');\n            removeClass($thTxt3,'setThumbTxt');\n            break;\n        case 4:\n            // console.log(\"Enable thumb 4\");\n            removeClass($vidThumb4,'disableThumb');\n            removeClass($thTxt4,'setThumbTxt');\n            break;\n    }\n};\n\n// loops thru the videos -----------------------\nAD.videoLoop = function(){\n    // console.log(\"Video looping --- current video number = \"+videoNum);\n    AD.enableThumb();\n    AD.removeCouch();\n\n    switch(videoNum){\n\n        case 1:\n            // console.log(\"video 1 complete --- looping to next video\");\n            videoNum = 2;\n            addClass($thTxt2,'setThumbTxt');\n            addClass($vidThumb2,'disableThumb');\n            addClass($bgCouch, \"bg_couch_2\");\n            BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n            break;\n        case 2:\n            // console.log(\"video 2 complete --- looping to next video\");\n            videoNum = 3;\n            addClass($thTxt3,'setThumbTxt');\n            addClass($vidThumb3,'disableThumb');\n            addClass($bgCouch, \"bg_couch_3\");\n            BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n            break;\n        case 3:\n            // console.log(\"video 3 complete --- looping to next video\");\n            videoNum = 4;\n            addClass($thTxt4,'setThumbTxt');\n            addClass($vidThumb4,'disableThumb');\n            addClass($bgCouch, \"bg_couch_4\");\n            BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n            break;\n    }\n\n    // dispatchEvent (BLT.Events.SHOW_CONTROLS);\n};\n\n// Removes large couch on video change ----------\nAD.removeCouch = function(){\n    console.log(\"remove couch for video \"+videoNum);\n\n    switch(videoNum){\n        case 1:\n            removeClass($bgCouch, \"bg_couch_1\");\n            break;\n        case 2:\n            removeClass($bgCouch, \"bg_couch_2\");\n            break;\n        case 3:\n            removeClass($bgCouch, \"bg_couch_3\");\n            break;\n        case 4:\n            removeClass($bgCouch, \"bg_couch_4\");\n            break;\n    }\n\n};\n\n// Resets video for playback --------\nAD.resetVideo = function(){\n    $isVideoComplete = false;\n    removeClass($mainVideo, \"hidden\");\n    addClass($videoCap, 'hidden');\n    $videoContainer.addEventListener('mouseover', AD.handleControls);\n    $videoContainer.addEventListener('mouseout', AD.handleControls);\n};\n\n// Video Complete --------------\nAD.videoComplete = function() {\n    console.log(\"video \"+videoNum+\"complete\");\n    switch(videoNum){\n        case 0:\n            $isVideoComplete = true;\n            addClass($videoContainer, 'hidden');\n            tlCollapse.play();\n            break;\n\n        case 4:\n            $isVideoComplete = true;\n            addClass($mainVideo, \"hidden\");\n            removeClass($videoCap, 'hidden');\n            $videoContainer.removeEventListener('mouseover', AD.handleControls);\n            $videoContainer.removeEventListener('mouseout', AD.handleControls);\n            break;\n\n        case 1:\n        case 2:\n        case 3:\n            AD.videoLoop();\n            break;\n    }\n    dispatchEvent (BLT.Events.HIDE_CONTROLS);\n\n};\n\nAD.replayVideo = function (){\n    AD.resetVideo();\n    BLT.Video.loadPlayVideo (videoNum, \"custom\", false);\n};\n\nAD.killVideo = function(){\n    $isVideoComplete = true;\n    BLT.Video.killVideo();\n};\n\n////////////////////////////////////////////////////////////////////////////\n// *** Animation *** ///////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////\nvar tlCollapse = new TimelineLite({paused:true});\nvar tlExpand = new TimelineLite({paused:true});\n// var couchCount = 1;\n\n// collapse endframe animation ----------------------------\nAD.collapseEndframeAnimation = function() {\n    //console.log(\"Collapse Endframe animation\");\n    tlCollapse.addLabel(\"start\", 0);\n    tlCollapse.addLabel(\"txt\", 0.5);\n    tlCollapse.addLabel(\"btn\", 1);\n    tlCollapse.addLabel(\"end\", 5);\n\n    tlCollapse.from($colBg, 2, {opacity: 0},\"start\");\n    tlCollapse.from($colLogo, 0.5, {opacity: 0},\"txt\");\n    tlCollapse.from($colLockup, 1, {opacity:0},\"txt\");\n    tlCollapse.from($colHeader, 1, {opacity:0},\"txt\");\n    tlCollapse.from($cta, 1, {opacity:0},\"txt\");\n    // tlCollapse.from($expandBtn, 0.6, {y:\"+50px\", ease: Expo.easeOut},\"btn\");\n};\n\n// expand animation ----------------------------\nAD.expandAnimation = function() {\n    tlExpand.addLabel(\"start\", 0);\n    tlExpand.addLabel(\"lockup\", 0.5);\n    tlExpand.addLabel(\"thumbnails\", 1);\n    tlExpand.addLabel(\"video\", .5);\n    tlExpand.addLabel(\"end\", 5);\n\n    tlExpand.from($expBackground,2,{opacity:0}, \"start\");\n    tlExpand.from($vidThumb1, 0.6, {x:\"540\",ease: Expo.easeOut},\"thumbnails\");\n    tlExpand.from($vidThumb2, 0.6, {x:\"440\",ease: Expo.easeOut},\"thumbnails+=.2\");\n    tlExpand.from($vidThumb3, 0.6, {x:\"340\",ease: Expo.easeOut},\"thumbnails+=.4\");\n    tlExpand.from($vidThumb4, 0.6, {x:\"240\",ease: Expo.easeOut, onComplete:AD.thumbnailInit},\"thumbnails+=.6\");\n\n    // tlExpand.from($expLogo,0.4,{opacity: 0, scaleX:2, scaleY:2, rotationZ:.001, ease: Expo.easeInOut}, \"lockup\");\n    tlExpand.from($expLogo,1,{opacity: 0}, \"lockup\");\n    tlExpand.from($expPedigree,1,{opacity:0}, \"lockup\");\n    tlExpand.from($expDate,1,{opacity:0}, \"lockup\");\n    tlExpand.from($expCta,1,{opacity:0}, \"lockup\");\n    tlExpand.from($expHeader,2,{opacity:0}, \"lockup+=.25\");\n\n    tlExpand.call(function(){removeClass($mainVideo, \"hidden\");}, [], this, \"video\");\n\n};\n\n//////////////////////////////////////////////////////////////////////////////\n///// Date Code ---------------\n\nAD.checkDate = function () {\n    console.log('date check');\n\n\n    BLT.Tunein.addDate (2017, 2, 26, 'post');\n    BLT.Tunein.parseDates ();\n    // BLT.Tunein.parseDates (2017, 2, 26); // USE TO TEST DATES\n\n    switch (BLT.Tunein.currentID) {\n\n        case 'post':\n            console.info('DATE - Post');\n            addClass($colLockup, 'colDate_post');\n            addClass($expDate, 'expDate_post');\n            break;\n\n        default:\n            console.info('DATE - Default');\n            break;\n    }\n};\n\n/** STARTUP\n *******************************************************************/\nwindow.load = AD.initAd();"]}