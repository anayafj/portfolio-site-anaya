{"version":3,"sources":["dc_core.js","dc_video.js","bltFramework.js","main.js"],"names":[],"mappingsvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts/main.min.js","sourcesContent":["/** DOUBLECLICK CORE FUNCTIONS\n ********************************************************************************************/\n\n\n/** PRE INIT **********************************************/\nfunction initVendor () {\n    // init DoubleClick\n    if ( Enabler.isInitialized() ) vendorReady();\n    else Enabler.addEventListener ( studio.events.StudioEvent.INIT, vendorReady );\n}\n\n/** INIT *************************************************/\nfunction vendorReady () {\n    console.info ('DOUBLECLICK API INITIALIZING');\n\n    // polite load\n    if ( Enabler.isPageLoaded() ) pageLoadedHandler();\n    else Enabler.addEventListener (studio.events.StudioEvent.PAGE_LOADED, pageLoadedHandler);\n}\n\n/** PAGE LOADED *****************************************/\nfunction pageLoadedHandler () {\n    if ( Enabler.isVisible() ) adVisible();\n    else Enabler.addEventListener (studio.events.StudioEvent.VISIBLE, adVisible);\n}\n\n/** AD VISIBLE *****************************************/\nfunction adVisible () {\n    // ad visible ... dispatch READY event\n    dispatchEvent (BLT.Events.AD_READY);\n}\n","/** DC VIDEO PLAYER\n ********************************************************************************************/\n\nvar BLT = BLT || {};\nBLT.Video = BLT.Video || {};\n\nvar $videoArray = [],\n    $videoGroups = {},\n    $vidPlayer = undefined,\n    $currID = undefined,\n    $currTuneIn = undefined,\n    $currReportingID,\n    $isPlaying = false,\n    $autoPlay = false\n    ;\n\n\n/** INIT\n ********************************************************************************************/\nBLT.Video.init = function (vidElement) {\n    $vidPlayer = vidElement;\n    BLT.Video.checkInit(); // error check\n\n    BLT.Video.addListeners();\n\n    // determine current group ID based on TuneIn\n    var tuneinID = BLT.Tunein.currentID;\n    tuneinID === undefined ? $currTuneIn = 'default' : $currTuneIn = tuneinID;\n};\n\n\n/** ADD LISTENERS\n ********************************************************************************************/\nBLT.Video.addListeners = function () {\n    // ad events\n    addEventListener ('collapseAd', BLT.Video.handleEvents);\n    addEventListener ('parseDates', BLT.Video.handleEvents);\n    addEventListener ('pauseVideo', BLT.Video.handleEvents);\n    addEventListener ('playVideo', BLT.Video.handleEvents);\n    addEventListener ('replayVideo', BLT.Video.handleEvents);\n    addEventListener ('videoPlaying', BLT.Video.handleEvents);\n    addEventListener ('killVideo', BLT.Video.handleEvents);\n    addEventListener ('muteVideo', BLT.Video.handleEvents);\n    addEventListener ('unmuteVideo', BLT.Video.handleEvents);\n\n    // video events\n    $vidPlayer.addEventListener ('timeupdate', BLT.Video.handleProgress);\n    $vidPlayer.addEventListener ('canplay', BLT.Video.handleEvents);\n    $vidPlayer.addEventListener ('ended', BLT.Video.handleEvents);\n    $vidPlayer.addEventListener ('loadedmetadata', BLT.Video.handleEvents);\n\n    // FULL SCREEN METHODS\n    addEventListener ('showFullscreen', BLT.Video.handleEvents);\n    addEventListener ('exitFullscreen', BLT.Video.handleEvents);\n\n    // FULL SCREEN EXIT DETECTION\n    addEventListener ('webkitfullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('mozfullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('fullscreenchange', BLT.Video.onExitFSHandler, false);\n    addEventListener ('MSFullscreenChange', BLT.Video.onExitFSHandler, false);\n};\n\n\n/** HANDLE EVENTS\n ********************************************************************************************/\nBLT.Video.handleEvents = function (event) {\n    switch (event.type) {\n        case 'collapseAd':\n            dispatchEvent (BLT.Events.KILL_VIDEO);\n            break;\n        case 'parseDates':\n            BLT.Video.sortGroups();\n            break;\n        case 'pauseVideo':\n            BLT.Video.pauseVideo();\n            break;\n        case 'playVideo':\n            BLT.Video.playVideo();\n            break;\n        case 'replayVideo':\n            BLT.Video.replayVideo();\n            break;\n        case 'muteVideo':\n            BLT.Video.toggleMute(true);\n            break;\n        case 'unmuteVideo':\n            BLT.Video.toggleMute(false);\n            break;\n        case 'killVideo':\n            BLT.Video.killVideo();\n            break;\n        case 'showFullscreen':\n            BLT.Video.showFullScreen();\n            break;\n        case 'hideFullscreen':\n            BLT.Video.exitFullScreen();\n            break;\n        case 'canplay':\n            dispatchEvent (BLT.Events.VIDEO_READY);\n            break;\n        case 'ended':\n            $isPlaying = false;\n            dispatchEvent (BLT.Events.VIDEO_COMPLETE);\n            BLT.Video.exitFullScreen();\n            break;\n        case 'loadedmetadata':\n            BLT.Video.checkSize();\n            break;\n    }\n};\n\n/** HANDLE PROGRESS\n ********************************************************************************************/\nBLT.Video.handleProgress = function (event) {\n    var duration = $vidPlayer.duration;\n    var currTime = $vidPlayer.currentTime;\n    var perc = ((currTime/duration) *100).toFixed(2);\n\n    if (perc >= 75 && perc <= 76) {\n        console.log ('3RD QUARTILE');\n        dispatchEvent (BLT.Events.VIDEO_75_PERCENT);\n    }\n    else if (perc >= 50 && perc <= 51) {\n        console.log ('MIDPOINT');\n        dispatchEvent (BLT.Events.VIDEO_50_PERCENT);\n    }\n    else if (perc >= 25 && perc <= 26) {\n        console.log ('1ST QUARTILE');\n        dispatchEvent (BLT.Events.VIDEO_25_PERCENT);\n    }\n};\n\n\n/** ADD VIDEO\n ********************************************************************************************/\nBLT.Video.addVideo = function (sourcePath, groupID, reportingID) {\n    BLT.Video.checkInit(); // error check\n\n    // create video object\n    var videoObj = {};\n    videoObj.source = sourcePath;\n    videoObj.groupID = groupID;\n    videoObj.reportingID = reportingID;\n\n    // add to $videoArray\n    $videoArray.push (videoObj);\n\n    // rebuild $videoGroups\n    BLT.Video.sortGroups();\n};\n\n\n/** SORT GROUPS\n ********************************************************************************************/\nBLT.Video.sortGroups = function () {\n    // rebuld $videoGroups from $videoArray\n    $videoGroups = {};\n\n    for (var i in $videoArray) {\n        var videoObj = ($videoArray[i]);\n\n        // check if tuneIn is used, if not, add to a 'default' group\n        var groupID = videoObj.groupID;\n        $currTuneIn = BLT.Tunein.currentID;\n\n        if ($currTuneIn === undefined) {\n            $currTuneIn = 'default';\n            groupID = 'default';\n        }\n\n        // check if group exists in $videoGroups; if not create the group object\n        if ($videoGroups.hasOwnProperty(groupID) === false) {\n            $videoGroups[groupID] = [];\n        }\n\n        $videoGroups[groupID].push (videoObj);\n    }\n};\n\n\n/** LOAD VIDEO\n ********************************************************************************************/\nBLT.Video.loadVideo = function (videoID, controlType, isMuted) {\n    BLT.Video.checkInit(); // error check\n\n    // dispose any previous video instances\n    BLT.Video.killVideo();\n\n    var sourceVideo = $videoGroups[$currTuneIn][videoID].source;\n    $currID = videoID;\n    $currReportingID = $videoGroups[$currTuneIn][videoID].reportingID;\n\n    // mp4 video\n    srcNode = document.createElement ('source');\n    srcNode.setAttribute ('type', 'video/mp4');\n    srcNode.setAttribute ('src', Enabler.getUrl (sourceVideo + '.mp4'));\n    $vidPlayer.appendChild (srcNode);\n\n    // webm video\n    // var srcNode = document.createElement ('source');\n    // srcNode.setAttribute ('type', 'video/webm');\n    // srcNode.setAttribute ('src', Enabler.getUrl (sourceVideo + '.webm'));\n    // $vidPlayer.appendChild (srcNode);\n\n    // initially remove controls\n    $vidPlayer.removeAttribute (\"controls\");\n    dispatchEvent (BLT.Events.HIDE_CONTROLS);\n\n    // if adding controls, determine what type\n    if (controlType === 'default') $vidPlayer.setAttribute (\"controls\", \"controls\");\n    else if (controlType === 'custom') BLT.VideoControls.initControls ($vidPlayer);\n\n    // set autoplay\n    if ($autoPlay === true) $vidPlayer.setAttribute (\"autoplay\", $autoPlay);\n    else $vidPlayer.removeAttribute (\"autoplay\");\n\n    // handle muting\n    if (isMuted === undefined) isMuted = false;\n    BLT.Video.toggleMute (isMuted);\n\n    // DC TRACKING\n    Enabler.loadModule(studio.module.ModuleId.VIDEO, function() {\n        studio.video.Reporter.attach ($currReportingID, $vidPlayer);\n    });\n\n    $vidPlayer.load();\n\n    if ($autoPlay === true) {\n        $autoPlay = false;\n        $isPlaying = true;\n        console.info(\"LOAD AND PLAY -----  END \");\n        $vidPlayer.play ();\n        dispatchEvent (BLT.Events.VIDEO_PLAYING);\n    }\n};\n\n\n/** LOAD & PLAY VIDEO\n ********************************************************************************************/\nBLT.Video.loadPlayVideo = function (videoID, controlType, isMuted) {\n    $autoPlay = true;\n    BLT.Video.loadVideo (videoID, controlType, isMuted);\n};\n\n\n/** PLAY VIDEO\n ********************************************************************************************/\nBLT.Video.playVideo = function () {\n    $vidPlayer.play ();\n    $isPlaying = true;\n    dispatchEvent (BLT.Events.VIDEO_PLAYING);\n};\n\n\n/** PAUSE VIDEO\n ********************************************************************************************/\nBLT.Video.pauseVideo = function () {\n    $vidPlayer.pause ();\n    $isPlaying = false;\n    dispatchEvent (BLT.Events.VIDEO_PAUSED);\n};\n\n/** REPLAY VIDEO\n ********************************************************************************************/\nBLT.Video.replayVideo = function () {\n    $vidPlayer.pause ();\n    $vidPlayer.currentTime = 0;\n    $vidPlayer.play ();\n    $isPlaying = true;\n    dispatchEvent (BLT.Events.VIDEO_PLAYING);\n};\n\n\n/** KILL VIDEO\n ********************************************************************************************/\nBLT.Video.killVideo = function () {\n    console.log ('KILL VIDEO');\n    if ($isPlaying == true) $vidPlayer.pause();\n    $isPlaying = false;\n    while ($vidPlayer.firstChild) {\n        $vidPlayer.removeChild ($vidPlayer.firstChild);\n    }\n};\n\n\n/** TOGGLE MUTE\n ********************************************************************************************/\nBLT.Video.toggleMute = function (muteState) {\n    $vidPlayer.muted = muteState;\n\n    if (muteState === true) dispatchEvent (BLT.Events.VIDEO_MUTED);\n    else dispatchEvent (BLT.Events.VIDEO_UNMUTED);\n};\n\n\n/** CHECK VIDEO SIZE\n ********************************************************************************************/\nBLT.Video.checkSize = function() {\n    // check if video can play in IE\n    if ($vidPlayer.videoWidth > 1920 || $vidPlayer.videoHeight > 1080) {\n        console.error(\"<<< VIDEO EXCEEDS MAXIMUM SIZE FOR IE (1920x1088) >>>\");\n        console.error(\" <<< RESIZE THE VIDEO WITHIN SPEC FOR IE SUPPORT >>>\");\n    }\n};\n\n\n\n/** SHOW FULLSCREEN METHOD\n ********************************************************************************************/\nBLT.Video.showFullScreen = function() {\n    if (document.requestFullscreen)             document.requestFullscreen();\n    else if (document.mozRequestFullScreen)     document.mozRequestFullScreen();\n    else if (document.webkitRequestFullscreen)  document.webkitRequestFullscreen();\n    else if (document.msRequestFullscreen)      document.msRequestFullscreen();\n\n    dispatchEvent (BLT.Events.VIDEO_FULLSCREEN_OPENED);\n};\n\n\n/** EXIT FULLSCREEN METHOD\n ********************************************************************************************/\nBLT.Video.exitFullScreen = function() {\n    // cross browser exit fullscreen helper\n    if (document.exitFullscreen)                document.exitFullscreen();\n    else if (document.mozCancelFullScreen)      document.mozCancelFullScreen();\n    else if (document.webkitCancelFullScreen)   document.webkitCancelFullScreen();\n    else if (document.msExitFullscreen)         document.msExitFullscreen();\n};\n\n\n/** EXIT FULLSCREEN CALLBACK\n ********************************************************************************************/\nBLT.Video.onExitFSHandler = function(e)\n{\n    // run when fullscreen is exited\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement === false)\n    {\n        dispatchEvent (BLT.Events.VIDEO_FULLSCREEN_CLOSED);\n    }\n};\n\n\n/** ERROR CHECKING\n ********************************************************************************************/\nBLT.Video.checkInit = function () {\n    if ($vidPlayer === undefined) {\n        throw \"Video Element not defined. Please use BLT.Video.init () to pass the video element prior to using the video player.\"\n    }\n};\n","var BLT = BLT || {};\n\nBLT.initFramework = function () {\n    console.info ('BLT AD FRAMEWORK : version 1.4');\n};\n\n// startup\nwindow.onload = BLT.initFramework();\n\n\n/** FRAMEWORK DEPENDENCIES\n **********************************************************/\n\n/** BLT EVENTS\n **********************************************************/\n\n// polyfill fix for IE (adds custom events to IE)\n(function () {\n    function CustomEvent ( event, params ) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent ( 'CustomEvent' );\n        evt.initCustomEvent ( event, params.bubbles, params.cancelable, params.detail );\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n})();\n\n\nBLT.Events = {\n\n    /** AD EVENTS\n     *************************************************************/\n    AD_READY:                   new CustomEvent ('adReady'),\n    PARSE_DATES:                new CustomEvent ('parseDates')\n\n};\n\n\n/** BLT TUNEIN CLASS\n **********************************************************/\n\nBLT.Tunein = BLT.Tunein || {};\n\nBLT.Tunein.dates = [];\nBLT.Tunein.today = new Date();\nBLT.Tunein.currentTunein = new Date();\nBLT.Tunein.currentID = undefined;\nBLT.Tunein.isProxy = false;\n\n\nBLT.Tunein.addDate = function (year, month, day, id ) {\n    if (!BLT.Tunein.dates) BLT.Tunein.dates = [];\n    var date = new Date (year, month -1, day);\n    date.id = id;\n    BLT.Tunein.dates.push (date);\n};\n\n\nBLT.Tunein.parseDates = function (year, month, day ) {\n    if (BLT.Tunein.errorCheck()) return;\n\n    BLT.Tunein.isProxy = false;\n\n    // if date value for comparison if passed (for testing)\n    if (year && month && day) {\n        // will use proxy date for testing\n        BLT.Tunein.today = new Date (year, month -1, day);\n        BLT.Tunein.isProxy = true;\n    }\n\n    BLT.Tunein.sortDec (BLT.Tunein.dates);\n    BLT.Tunein.currentTunein = BLT.Tunein.today;\n    BLT.Tunein.currentID = 'default';\n\n    // determine correct Tunein\n    for (var i in BLT.Tunein.dates) {\n        if (BLT.Tunein.today >= BLT.Tunein.dates[i]) {\n            BLT.Tunein.currentID = BLT.Tunein.dates[i].id;\n            BLT.Tunein.currentTunein = BLT.Tunein.dates[i];\n            break;\n        }\n    }\n\n    dispatchEvent (BLT.Events.PARSE_DATES);\n\n    // display the results\n    BLT.Tunein.displayCurrentDate();\n};\n\n\n// sort date array ascending\nBLT.Tunein.sortAsc = function (dateArray) {\n    dateArray.sort (function (a, b) {\n        a = new Date ( a.getTime() );\n        b = new Date ( b.getTime() );\n        return a < b ? -1 : a > b ? 1 : 0;\n    });\n};\n\n\n// sort date array descending\nBLT.Tunein.sortDec = function (dateArray) {\n    dateArray.sort (function (a, b) {\n        a = new Date ( a.getTime() );\n        b = new Date ( b.getTime() );\n        return a > b ? -1 : a < b ? 1 : 0;\n    });\n};\n\n\n/** CONSOLE LOG FOR TESTING **/\n// displays all dates in the console window (for testing)\nBLT.Tunein.displayDates = function () {\n    if (BLT.Tunein.errorCheck()) return;\n\n    var revDates = BLT.Tunein.dates.slice(0); // clone\n    BLT.Tunein.sortAsc (revDates);\n\n    for (var x in revDates) {\n        console.info ( revDates[x].id, '--> ', revDates[x].toLocaleDateString() );\n    }\n\n    // display the results\n    BLT.Tunein.displayCurrentDate();\n};\n\n\n// displays current dates in console window (for testing)\nBLT.Tunein.displayCurrentDate = function () {\n    var outputString;\n    BLT.Tunein.isProxy ? outputString = 'CURRENT TUNEIN (USING PROXY):' : outputString = 'CURRENT TUNEIN:';\n\n    console.info (outputString, BLT.Tunein.currentID, '-->', BLT.Tunein.currentTunein.toLocaleDateString() );\n};\n\n\n// ERROR CHECKING\nBLT.Tunein.errorCheck = function () {\n    if (BLT.Tunein.dates.length === 0) {\n        console.info ('<<< Tunein cannot be parsed. Use BLT.Tunein.addDate to add date values');\n        return 1;\n    }\n    else return 0; // no error\n};\n\n\n\n/** BLT HELPER METHODS\n **********************************************************/\n\n/** LOAD EXTERNAL JAVASCRIPT **/\nvar loadScript = function (scriptURL, callback)  {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n\n    if (script.readyState){  // IE, incl. IE9\n        script.onreadystatechange = function(){\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\"){\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {  // others\n        script.onload = callback;\n    }\n\n    script.src = scriptURL;\n    document.body.appendChild (script);\n};\n\n\n/** ADD CLASS **/\nvar addClass = function ($el, className) {\n    $el.classList.add(className);\n};\n\n\n/** REMOVE CLASS **/\nvar removeClass = function (element, className) {\n    $el.classList.remove(className);\n};\n\n\n/** GET ELEMENT **/\nvar getEl = function ($id) {\n    return document.getElementById ($id);\n};\n\n\n/** SHOW ELEMENT **/\nvar show = function ($element) {\n    $element.style.display = 'block';\n};\n\n\n/** HIDE ELEMENT **/\nvar hide = function ($element) {\n    $element.style.display = 'none';\n};\n\n\n/** DEVICE DETECTION **/\nvar getDevice = (function () {\n    var ua     = navigator.userAgent.toLowerCase();\n    var detect = (function (s) {\n        if (typeof (s) === 'undefined') {\n            s = ua;\n        } else {\n            ua = s.toLowerCase();\n        }\n        if (/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(ua)) {\n            return 'tablet';\n        } else if (/(mobi|ipod|phone|blackberry|opera mini|fennec|minimo|symbian|psp|nintendo ds|archos|skyfire|puffin|blazer|bolt|gobrowser|iris|maemo|semc|teashark|uzard)/.test(ua)) {\n            return 'phone';\n        } else {\n            return 'desktop';\n        }\n    });\n    var device = detect();\n    return {\n        detect     : detect,\n        device     : device,\n        isMobile   : (device !== 'desktop'),\n        isTablet   : (device === 'tablet'),\n        isDestktop : (device === 'desktop'),\n        userAgent  : ua\n    };\n}());\n\n","var AD = AD || {};\n\nvar $ad             = getEl ('adContainer');\nvar $lockup         = getEl ('dateLockup');\nvar $date           = getEl ('date');\nvar $logo           = getEl ('hbomax');\nvar $tag            = getEl ('tag');\nvar $tt             = getEl ('tt');\nvar $ttBlur         = getEl ('ttBlur');\nvar $bg             = getEl ('bg');\nvar $rainBG         = getEl ('rainBG');\nvar $card1          = getEl ('card1');\nvar $card2          = getEl ('card2');\nvar $drop1          = getEl ('drop1');\nvar $drop2          = getEl ('drop2');\nvar $drop3          = getEl ('drop3');\n\n/** INITIALIZE AD\n *******************************************************************/\nAD.initAd = function () {\n    AD.addListeners();\n    AD.setupAnimation();\n\n    AD.checkDate();\n\n    // INITIALIZE THE AD VENDOR API\n    initVendor();\n};\n\n\n/** SETUP LISTENERS\n *******************************************************************/\nAD.addListeners = function () {\n    // ad events\n    addEventListener ('adReady', AD.adReady);\n    $ad.addEventListener('click', AD.clickHandler)\n};\n\nAD.clickHandler = function (event) {\n    console.log('BLT CLICK:', event.currentTarget.id);\n    Enabler.exit ('main exit');\n};\n\n/** AD READY -- CALLED ONCE VENDOR API IS READY (EVENT DISPATCHED)\n *******************************************************************/\nAD.adReady = function() {\n    console.info ('AD READY');\n    show($ad);\n    tl.play();\n    // tl.play('key');\n};\n\n/** ANIMATION SETUP\n *******************************************************************/\nvar tl = new TimelineLite({paused:true});\n\nAD.setupAnimation = function() {\n    tl.addLabel(\"start\", 0);\n    tl.addLabel(\"card2\", 5);\n    tl.addLabel(\"key\", 10);\n    tl.addLabel(\"lockup\", 13);\n    tl.addLabel(\"end\", 15);\n    // ease: Power1.easeIn\n\n    tl.to($rainBG, 15,{y: -160, ease: Linear.easeNone}, \"start\");\n\n    // card 1\n    tl.from($drop1, 3,{y: -136, ease: Power4.easeInOut}, \"start+=.5\");\n    tl.from($card1, 3,{opacity: 0, scale: 0.6, rotation: .001, ease: Power1.easeIn}, \"start\");\n    tl.to($card1, 4,{scale: 1.1, rotation: .001, ease: Linear.easeNone}, \"start+=1\");\n    tl.to($card1, 2,{opacity: 0, ease: Power4.easeOut}, \"card2-=1\");\n\n    // card 2\n    tl.from($drop2, 5,{y: -136, ease: Power4.easeInOut}, \"card2+=.5\");\n    tl.from($drop3, 5,{y: -136, ease: Power4.easeInOut}, \"card2+=1.5\");\n    tl.from($card2, 3,{opacity: 0, scale: 0.6, rotation: .001, ease: Power1.easeIn}, \"card2\");\n    tl.to($card2, 4,{scale: 1.1, rotation: .001, ease: Linear.easeNone}, \"card2+=1\");\n    tl.to($card2, 2,{opacity: 0, ease: Power4.easeOut}, \"key-=1\");\n\n    tl.to($rainBG, 3,{opacity: 0, ease: Linear.easeNone}, \"key\");\n    tl.from($bg, 4,{opacity: 0, scale: 1.4, ease: Power1.easeOut}, \"key\");\n    tl.from($tt, 4,{scale: 1.4, ease: Power1.easeOut}, \"key\");\n    tl.from($ttBlur, 4,{scale: 1.4, ease: Power1.easeOut}, \"key\");\n    tl.to($ttBlur, 2,{opacity: 1, ease: Power1.easeOut}, \"key\");\n    tl.to($tt, 2,{opacity: 1, ease: Power1.easeOut}, \"key+=2\");\n    tl.to($ttBlur, 2,{opacity: 0, ease: Power1.easeOut}, \"key+=2\");\n\n       \n    tl.from($lockup, 2,{autoAlpha: 0, ease: Power1.easeOut}, \"lockup\");\n    tl.from($logo, 1.5,{ x: \"-=8\", rotation: .001,  ease: Power1.easeOut }, \"lockup\");\n    tl.from($date, 1.5,{ x: \"+=7\", rotation: .001, ease: Power1.easeOut }, \"lockup\");\n    tl.from($tag, 2,{ opacity: 0, ease: Power1.easeOut }, \"lockup\");\n\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n///// Date Code ---------------\n\nAD.checkDate = function () {\n    BLT.Tunein.addDate (2020, 10, 25, 'tonight');\n    BLT.Tunein.addDate (2020, 10, 26, 'now');\n\n    BLT.Tunein.parseDates ();\n    // BLT.Tunein.parseDates (2020, 10, 25); // USE TO TEST DATES\n\n    switch (BLT.Tunein.currentID) {\n\n        case 'now':\n            addClass(date, 'date3');\n            break;\n\n        case 'tonight':\n            addClass(date, 'date2');\n            break;\n\n        default:\n            break;\n    }\n};\n\n\n\n/** STARTUP\n *******************************************************************/\nwindow.load = AD.initAd();\n\n"]}